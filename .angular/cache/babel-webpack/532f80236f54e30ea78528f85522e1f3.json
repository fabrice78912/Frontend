{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/user.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"ngx-ui-loader\";\nimport * as i6 from \"../service/snackbar.service\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/material/icon\";\nfunction LoginComponent_mat_error_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This fiel is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This fiel is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, LoginComponent_mat_error_13_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, LoginComponent_mat_error_13_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls.email.errors.pattern);\n  }\n}\nfunction LoginComponent_mat_error_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This fiel is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, LoginComponent_mat_error_21_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls.password.errors.required);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, userService, dialogRef, ngxService, snackBarService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackBarService = snackBarService;\n      this.hide = true;\n      this.loginForm = FormGroup;\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n        password: [null, [Validators.required]]\n      });\n    }\n    handleSubmit() {\n      this.ngxService.start();\n      var formData = this.loginForm.value;\n      var data = {\n        email: formData.email,\n        password: formData.password\n      };\n      this.userService.login(data).subscribe(response => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        localStorage.setItem('token', response.token);\n        this.router.navigate(['/cafe/dashboard']);\n      }, error => {\n        var _a, _b;\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.NgxUiLoaderService), i0.ɵɵdirectiveInject(i6.SnackbarService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 8,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"speacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearrance\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 2)(5, \"button\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-dialog-content\", 4)(7, \"form\", 5)(8, \"div\", 6)(9, \"mat-form-field\", 7)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 3, 2, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 7)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 10);\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(19, \"mat-icon\");\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, LoginComponent_mat_error_21_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"mat-dialog-actions\", 12)(23, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵelementStart(24, \"mat-icon\");\n        i0.ɵɵtext(25, \"login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"button\", 14);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls.email.touched && ctx.loginForm.controls.email.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls.password.touched && ctx.loginForm.controls.password.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.loginForm.valid && ctx.loginForm.dirty));\n      }\n    },\n    directives: [i7.MatToolbar, i7.MatToolbarRow, i8.DefaultLayoutDirective, i9.MatButton, i4.MatDialogClose, i4.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i8.DefaultFlexDirective, i10.MatFormField, i10.MatLabel, i11.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i12.NgIf, i10.MatError, i10.MatSuffix, i13.MatIcon, i4.MatDialogActions],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}mat-form-field[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}