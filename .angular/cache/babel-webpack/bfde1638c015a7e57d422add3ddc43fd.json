{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/category.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/service/snackbar.service\";\nexport let CategoryComponent = /*#__PURE__*/(() => {\n  class CategoryComponent {\n    constructor(dialogData, forBuilder, categoyService, dialogRef, snackBarService) {\n      this.dialogData = dialogData;\n      this.forBuilder = forBuilder;\n      this.categoyService = categoyService;\n      this.dialogRef = dialogRef;\n      this.snackBarService = snackBarService;\n      this.onAddCategory = new EventEmitter();\n      this.onEditCategory = new EventEmitter();\n      this.categoryForm = FormGroup;\n      this.dialogAction = \"Add\";\n      this.acttion = \"Add\";\n    }\n    ngOnInit() {\n      this.categoryForm = this.forBuilder.group({\n        name: [null, [Validators.required]]\n      });\n      if (this.dialogData.action === 'Edit') {\n        this.dialogAction = \"Edit\";\n        this.acttion = \"Update\";\n        this.categoryForm.patchValue(this.dialogData.data);\n      }\n    }\n    handleSubmit() {\n      if (this.dialogAction === \"Edit\") {\n        this.edit();\n      } else {\n        this.add();\n      }\n    }\n    add() {\n      var formData = this.categoryForm.value;\n      var data = {\n        name: formData.name\n      };\n      this.categoyService.add(data).subscribe(response => {\n        this.dialogRef.close();\n        this.onAddCategory.emit();\n        this.responseMessage = response.message;\n        this.snackBarService.openSnackBar(this.responseMessage, \"success\");\n      }, error => {\n        var _a, _b;\n        this.dialogRef.close();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    edit() {\n      var formData = this.categoryForm.value;\n      var data = {\n        id: this.dialogData.data.id,\n        name: formData.name\n      };\n      this.categoyService.update(data).subscribe(response => {\n        this.dialogRef.close();\n        this.onAddCategory.emit();\n        this.responseMessage = response.message;\n        this.snackBarService.openSnackBar(this.responseMessage, \"success\");\n      }, error => {\n        var _a, _b;\n        this.dialogRef.close();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n  }\n  CategoryComponent.ɵfac = function CategoryComponent_Factory(t) {\n    return new (t || CategoryComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.SnackbarService));\n  };\n  CategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryComponent,\n    selectors: [[\"app-category\"]],\n    decls: 2,\n    vars: 0,\n    template: function CategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"category works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return CategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}