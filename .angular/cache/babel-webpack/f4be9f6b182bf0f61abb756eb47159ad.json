{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"../service/snackbar.service\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(formBuilder, userService, dialogRef, ngxService, snackBarService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackBarService = snackBarService;\n      this.forgotPasswordForm = FormGroup;\n    }\n    ngOnInit() {\n      this.forgotPasswordForm = this.formBuilder.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]]\n      });\n    }\n    handleSubmit() {\n      this.ngxService.start();\n      var formData = this.forgotPasswordForm.value;\n      var data = {\n        email: formData.email\n      };\n      this.userService.forgotPassword(data).subscribe(response => {\n        this.ngxService.stop();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.dialogRef.close();\n        this.snackBarService.openSnackBar(this.responseMessage, \"\");\n      }, error => {\n        var _a;\n        this.ngxService.stop();\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n  }\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n  };\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[\"color\", \"primary\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\")(2, \"span\");\n        i0.ɵɵtext(3, \"Forgot Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 1);\n        i0.ɵɵelementStart(5, \"button\", 2)(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"close\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    directives: [i6.MatToolbar, i6.MatToolbarRow, i7.MatButton, i3.MatDialogClose, i8.MatIcon],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}mat-from-field[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}